{
  "name": "slides_ppt_n8n",
  "nodes": [
    {
      "parameters": {
        "options": {
          "allowFileUploads": true
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        208,
        0
      ],
      "id": "ba7637ac-4fb2-4571-81b2-ea4cc3ba10d3",
      "name": "When chat message received",
      "webhookId": "b97d3507-8d6e-49be-97ef-3c5eff34cd45"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "={{ $json.chatInput }}"
            },
            {
              "content": "=act as a file name giver,create a name of a presentation slide file based on the user input. For example, if the user inputs \"make me a presentation on how to install wordpress on my website\", the output would be something like \"Presentation_{{ $today.toLocaleString()}}_How to Install Wordpress\"\nso only give the output content as filename for ppt\n",
              "role": "system"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        464,
        0
      ],
      "id": "089706d0-cc5b-41e0-9bc8-8fd9faa00b62",
      "name": "Message a model",
      "credentials": {
        "openAiApi": {
          "id": "LdXvQduVbrO3GpRs",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "title": "={{ $json.message.content }}"
      },
      "type": "n8n-nodes-base.googleSlides",
      "typeVersion": 2,
      "position": [
        832,
        0
      ],
      "id": "63df6d95-f865-4dba-a875-2930674ce697",
      "name": "Create a presentation",
      "credentials": {
        "googleSlidesOAuth2Api": {
          "id": "5cKZbs8ywg9gkftP",
          "name": "Google Slides account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "bcf12fd2-bad1-491d-b5d3-26aee5bfbeaf",
              "name": "total_slides",
              "value": 5,
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1248,
        0
      ],
      "id": "fa546e04-0b32-49ea-bc54-e415fe317645",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an AI presentation builder. Given the topic: \"{{ $('When chat message received').item.json.chatInput }}\" and slide count: {{ $json.total_slides }}, generate a slide-by-slide breakdown of slide titles and bullet points in JSON format.\n\nEach slide should contain a title, subtitle and at least 5 detailed bullet points.\n\nFormat:\n[\n  {\n    \"title\": \"Slide Title\",\n    \"subtitle\": \"Slide Subtitle\",\n    \"bullets\": [\"Point 1\", \"Point 2\"]\n  },\n  ...\n]\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1456,
        0
      ],
      "id": "d95e67ee-05e6-4872-b9bf-d0c893d46a8c",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1392,
        224
      ],
      "id": "46db0c68-ab5f-46cc-915b-ce050e9b9a12",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "LdXvQduVbrO3GpRs",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "batchSize": "={{ $('Edit Fields').item.json.total_slides }}",
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2000,
        0
      ],
      "id": "b6b4db73-ec51-43ce-9e9f-14a2a67ced77",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://slides.googleapis.com/v1/presentations/{{ $('Create a presentation').item.json.presentationId }}:batchUpdate",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleSlidesOAuth2Api",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ {\n  requests: [\n    {\n      createSlide: {\n        objectId: $json.ids.slide,\n        slideLayoutReference: { predefinedLayout: 'BLANK' }\n      }\n    },\n    {\n      createShape: {\n        objectId: $json.ids.logo,\n        shapeType: 'TEXT_BOX',\n        elementProperties: {\n          pageObjectId: $json.ids.slide,\n          size: { width: { magnitude: 400, unit: 'PT' }, height: { magnitude: 36, unit: 'PT' } },\n          transform: { scaleX: 1, scaleY: 1, translateX: 32, translateY: 24, unit: 'PT' }\n        }\n      }\n    },\n    {\n      insertText: {\n        objectId: $json.ids.logo,\n        insertionIndex: 0,\n        text: $json.logo_str.replace(/^=/, '')\n      }\n    },\n    {\n      updateTextStyle: {\n        objectId: $json.ids.logo,\n        textRange: { type: 'ALL' },\n        style: {\n          fontFamily: 'Open Sans',\n          fontSize: { magnitude: 15, unit: 'PT' },\n          foregroundColor: { opaqueColor: { rgbColor: { red: 0.73, green: 0.75, blue: 0.78 } } }\n        },\n        fields: 'fontFamily,fontSize,foregroundColor'\n      }\n    },\n    {\n      createShape: {\n        objectId: $json.ids.title,\n        shapeType: 'TEXT_BOX',\n        elementProperties: {\n          pageObjectId: $json.ids.slide,\n          size: { width: { magnitude: 600, unit: 'PT' }, height: { magnitude: 80, unit: 'PT' } },\n          transform: { scaleX: 1, scaleY: 1, translateX: 32, translateY: 96, unit: 'PT' }\n        }\n      }\n    },\n    {\n      insertText: {\n        objectId: $json.ids.title,\n        insertionIndex: 0,\n        text: $json.title_str.replace(/^=/, '')\n      }\n    },\n    {\n      updateTextStyle: {\n        objectId: $json.ids.title,\n        textRange: { type: 'ALL' },\n        style: {\n          fontFamily: 'Roboto',\n          fontSize: { magnitude: 35, unit: 'PT' },\n          bold: true,\n          foregroundColor: { opaqueColor: { rgbColor: { red: 0.95, green: 0.35, blue: 0.15 } } }\n        },\n        fields: 'fontFamily,fontSize,bold,foregroundColor'\n      }\n    },\n    {\n      createShape: {\n        objectId: $json.ids.subtitle,\n        shapeType: 'TEXT_BOX',\n        elementProperties: {\n          pageObjectId: $json.ids.slide,\n          size: { width: { magnitude: 600, unit: 'PT' }, height: { magnitude: 60, unit: 'PT' } },\n          transform: { scaleX: 1, scaleY: 1, translateX: 32, translateY: 168, unit: 'PT' }\n        }\n      }\n    },\n    {\n      insertText: {\n        objectId: $json.ids.subtitle,\n        insertionIndex: 0,\n        text: $json.subtitle_str.replace(/^=/, '')\n      }\n    },\n    {\n      updateTextStyle: {\n        objectId: $json.ids.subtitle,\n        textRange: { type: 'ALL' },\n        style: {\n          fontFamily: 'Open Sans',\n          fontSize: { magnitude: 25, unit: 'PT' },\n          bold: true,\n          foregroundColor: { opaqueColor: { rgbColor: { red: 0.20, green: 0.20, blue: 0.20 } } }\n        },\n        fields: 'fontFamily,fontSize,bold,foregroundColor'\n      }\n    },\n    {\n      createShape: {\n        objectId: $json.ids.bullet,\n        shapeType: 'TEXT_BOX',\n        elementProperties: {\n          pageObjectId: $json.ids.slide,\n          size: { width: { magnitude: 700, unit: 'PT' }, height: { magnitude: 280, unit: 'PT' } },\n          transform: { scaleX: 1, scaleY: 1, translateX: 32, translateY: 240, unit: 'PT' }\n        }\n      }\n    },\n    {\n      insertText: {\n        objectId: $json.ids.bullet,\n        insertionIndex: 0,\n        text: $json.bullets_text.replace(/^=/, '')\n      }\n    },\n    {\n      createParagraphBullets: {\n        objectId: $json.ids.bullet,\n        textRange: { type: 'ALL' },\n        bulletPreset: 'BULLET_DISC_CIRCLE_SQUARE'\n      }\n    },\n    {\n      updateTextStyle: {\n        objectId: $json.ids.bullet,\n        textRange: { type: 'ALL' },\n        style: {\n          fontFamily: 'Open Sans',\n          fontSize: { magnitude: 20, unit: 'PT' },\n          foregroundColor: { opaqueColor: { rgbColor: { red: 0.20, green: 0.20, blue: 0.20 } } }\n        },\n        fields: 'fontFamily,fontSize,foregroundColor'\n      }\n    },\n    {\n      updateParagraphStyle: {\n        objectId: $json.ids.bullet,\n        textRange: { type: 'ALL' },\n        style: {\n          alignment: 'START',\n          lineSpacing: 140,\n          indentStart: { magnitude: 18, unit: 'PT' },\n          spaceAbove: { magnitude: 2, unit: 'PT' },\n          spaceBelow: { magnitude: 2, unit: 'PT' }\n        },\n        fields: 'alignment,lineSpacing,indentStart,spaceAbove,spaceBelow'\n      }\n    }\n  ]\n} }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2464,
        16
      ],
      "id": "ee7b4f10-3ece-418e-b9a8-aae0e41f640b",
      "name": "HTTP Request",
      "credentials": {
        "googleSlidesOAuth2Api": {
          "id": "5cKZbs8ywg9gkftP",
          "name": "Google Slides account"
        }
      }
    },
    {
      "parameters": {
        "operation": "share",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.presentationId }}",
          "mode": "id"
        },
        "permissionsUi": {
          "permissionsValues": {
            "role": "writer",
            "type": "anyone"
          }
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1040,
        0
      ],
      "id": "d5fc3b86-a9d8-4085-8363-b112af5a141f",
      "name": "Share file",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "SgnsL9trNU1afVfx",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2672,
        16
      ],
      "id": "2c7df0a6-dcfb-4d33-ae58-747e07561e0e",
      "name": "Wait",
      "webhookId": "bbd8ae56-ec42-4980-8226-babe0fad47ad"
    },
    {
      "parameters": {
        "jsCode": "// Grab the model output (adjust the path if your field name differs)\nlet raw = $input.first().json.output ?? $json.output ?? '';\n\n// Trim and strip ``` fences if present\nlet cleaned = String(raw).trim();\n\n// If there's any prose, pull out just the JSON array between [ ... ]\nconst lb = cleaned.indexOf('[');\nconst rb = cleaned.lastIndexOf(']');\nif (lb !== -1 && rb !== -1) cleaned = cleaned.slice(lb, rb + 1);\n\n// Remove markdown code fences like ```json ... ```\ncleaned = cleaned\n  .replace(/^```(?:json)?\\s*/i, '')\n  .replace(/```$/i, '')\n  .trim();\n\nlet slides;\ntry {\n  slides = JSON.parse(cleaned);\n} catch (err) {\n  throw new Error('Could not parse JSON. Got:\\n' + cleaned);\n}\n\n// Return one item per slide\nreturn slides.map(slide => ({ json: slide }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1792,
        0
      ],
      "id": "cb5e6e14-9ab6-4016-9039-3c049fbcfbfc",
      "name": "parse json",
      "retryOnFail": false
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "647d52c4-7253-44f7-82ff-45f9895abdd7",
              "name": "logo_str",
              "value": "=@nikhil",
              "type": "string"
            },
            {
              "id": "f1abfc10-45ad-4f82-abeb-22f470773412",
              "name": "title_str",
              "value": "=={{ String($json.title ?? '') }}",
              "type": "string"
            },
            {
              "id": "d7c89cae-cdee-4bfc-aa14-9a23f1afde56",
              "name": "subtitle_str",
              "value": "=={{ String($json.subtitle ?? '') }}",
              "type": "string"
            },
            {
              "id": "b8eecc3a-348f-40c2-b0f5-af6e6c0310ad",
              "name": "bullets_text",
              "value": "=={{ Array.isArray($json.bullets)      ? $json.bullets.join('\\n')      : (()=>{ try { return JSON.parse($json.bullets).join('\\n'); }               catch(e){ return String($json.bullets ?? ''); } })()   }}",
              "type": "string"
            },
            {
              "id": "3624f084-6772-42da-bbd6-5b977097e9a7",
              "name": "ids",
              "value": "={\n  \"slide\": \"slide_{{ $itemIndex }}\",\n  \"logo\": \"logo_{{ $itemIndex }}\",\n  \"title\": \"title_{{ $itemIndex }}\",\n  \"subtitle\": \"subtitle_{{ $itemIndex }}\",\n  \"bullet\": \"bullet_{{ $itemIndex }}\"\n}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2256,
        16
      ],
      "id": "d58e6ffc-2b19-44de-98c4-73e1b6fc6900",
      "name": "slides layout"
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model": {
      "main": [
        [
          {
            "node": "Create a presentation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create a presentation": {
      "main": [
        [
          {
            "node": "Share file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "parse json",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "slides layout",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Share file": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "parse json": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "slides layout": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "fc240564-8967-4685-9af8-eb1510ebab06",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "cc3cad3156f0ee04c482db28e6b30dcdd9e9b0b357dbd52876dd409f982b2a31"
  },
  "id": "TA06sc49adEtmaWX",
  "tags": []
}